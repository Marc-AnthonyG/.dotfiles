#!/bin/bash

export PATH="$HOME/.local/share/omarchy/bin:$PATH"

# Set to true when going directly to a submenu, so we can exit directly
BACK_TO_EXIT=false

back_to() {
    local parent_menu="$1"

    if [[ "$BACK_TO_EXIT" == "true" ]]; then
        exit 0
    elif [[ -n "$parent_menu" ]]; then
        "$parent_menu"
    else
        show_main_menu
    fi
}

menu() {
    local prompt="$1"
    local options="$2"
    local extra="$3"
    local preselect="$4"

    read -r -a args <<<"$extra"

    if [[ -n "$preselect" ]]; then
        local index
        index=$(echo -e "$options" | grep -nxF "$preselect" | cut -d: -f1)
        if [[ -n "$index" ]]; then
            args+=("-a" "$index")
        fi
    fi

    echo -e "$options" | walker --dmenu --theme dmenu_250 -p "$prompt…" "${args[@]}"
}

terminal() {
    alacritty --class=Omarchy -e "$@"
}

present_terminal() {
    omarchy-launch-floating-terminal-with-presentation $1
}

open_in_editor() {
    notify-send "Editing config file" "$1"
    omarchy-launch-editor "$1"
}

install() {
    present_terminal "echo 'Installing $1...'; sudo pacman -S --noconfirm $2"
}

install_and_launch() {
    present_terminal "echo 'Installing $1...'; sudo pacman -S --noconfirm $2 && setsid gtk-launch $3"
}

install_font() {
    present_terminal "echo 'Installing $1...'; sudo pacman -S --noconfirm --needed $2 && sleep 2 && omarchy-font-set '$3'"
}

install_terminal() {
    present_terminal "omarchy-install-terminal $1"
}

aur_install() {
    present_terminal "echo 'Installing $1 from AUR...'; yay -S --noconfirm $2"
}

aur_install_and_launch() {
    present_terminal "echo 'Installing $1 from AUR...'; yay -S --noconfirm $2 && setsid gtk-launch $3"
}

show_trigger_menu() {
    case $(menu "Trigger" "  Capture\n  Share\n󰔎  Toggle") in
    *Capture*) show_capture_menu ;;
    *Share*) show_share_menu ;;
    *Toggle*) show_toggle_menu ;;
    *) show_main_menu ;;
    esac
}

show_capture_menu() {
    case $(menu "Capture" "  Screenshot\n  Screenrecord\n󰃉  Color") in
    *Screenshot*) show_screenshot_menu ;;
    *Screenrecord*) show_screenrecord_menu ;;
    *Color*) pkill hyprpicker || hyprpicker -a ;;
    *) show_trigger_menu ;;
    esac
}

show_screenshot_menu() {
    case $(menu "Screenshot" "  Region\n  Window\n  Display") in
    *Region*) omarchy-cmd-screenshot ;;
    *Window*) omarchy-cmd-screenshot window ;;
    *Display*) omarchy-cmd-screenshot output ;;
    *) show_capture_menu ;;
    esac
}

show_screenrecord_menu() {
    case $(menu "Screenrecord" "  Region\n  Region + Audio\n  Display\n  Display + Audio") in
    *"Region + Audio"*) omarchy-cmd-screenrecord region audio ;;
    *Region*) omarchy-cmd-screenrecord ;;
    *"Display + Audio"*) omarchy-cmd-screenrecord output audio ;;
    *Display*) omarchy-cmd-screenrecord output ;;
    *) show_capture_menu ;;
    esac
}

show_share_menu() {
    case $(menu "Share" "  Clipboard\n  File \n  Folder") in
    *Clipboard*) terminal bash -c "omarchy-cmd-share clipboard" ;;
    *File*) terminal bash -c "omarchy-cmd-share file" ;;
    *Folder*) terminal bash -c "omarchy-cmd-share folder" ;;
    *) back_to show_trigger_menu ;;
    esac
}

show_toggle_menu() {
    case $(menu "Toggle" "󱄄  Screensaver\n󰔎  Nightlight\n󱫖  Idle Lock\n󰍜  Top Bar") in
    *Screensaver*) omarchy-toggle-screensaver ;;
    *Nightlight*) omarchy-toggle-nightlight ;;
    *Idle*) omarchy-toggle-idle ;;
    *Bar*) omarchy-toggle-waybar ;;
    *) show_trigger_menu ;;
    esac
}

show_style_menu() {
    case $(menu "Style" "󰸌  Theme\n  Font\n  Background\n󱄄  Screensaver\n  About") in
    *Theme*) show_theme_menu ;;
    *Font*) show_font_menu ;;
    *Background*) omarchy-theme-bg-next ;;
    *Screensaver*) open_in_editor ~/.config/omarchy/branding/screensaver.txt ;;
    *About*) open_in_editor ~/.config/omarchy/branding/about.txt ;;
    *) show_main_menu ;;
    esac
}

show_theme_menu() {
    theme=$(menu "Theme" "$(omarchy-theme-list)" "" "$(omarchy-theme-current)")
    if [[ "$theme" == "CNCLD" || -z "$theme" ]]; then
        back_to show_style_menu
    else
        omarchy-theme-set "$theme"
    fi
}

show_font_menu() {
    theme=$(menu "Font" "$(omarchy-font-list)" "-w 350" "$(omarchy-font-current)")
    if [[ "$theme" == "CNCLD" || -z "$theme" ]]; then
        back_to show_style_menu
    else
        omarchy-font-set "$theme"
    fi
}

show_setup_menu() {
    local options="  Audio\n  Wifi\n󰂯  Bluetooth\n󱐋  Power Profile\n  Defaults\n󰱔  DNS\n  Security"

    case $(menu "Setup" "$options") in
    *Audio*) $TERMINAL --class=Wiremix -e wiremix ;;
    *Wifi*)
        rfkill unblock wifi
        omarchy-launch-wifi
        ;;
    *Bluetooth*)
        rfkill unblock bluetooth
        blueberry
        ;;
    *Power*) show_setup_power_menu ;;
    *Defaults*) open_in_editor ~/.config/uwsm/default ;;
    *DNS*) present_terminal omarchy-setup-dns ;;
    *Security*) show_setup_security_menu ;;
    *) show_main_menu ;;
    esac
}

show_setup_power_menu() {
    profile=$(menu "Power Profile" "$(omarchy-powerprofiles-list)" "" "$(powerprofilesctl get)")

    if [[ "$profile" == "CNCLD" || -z "$profile" ]]; then
        back_to show_setup_menu
    else
        powerprofilesctl set "$profile"
    fi
}

show_setup_security_menu() {
    case $(menu "Setup" "󰈷  Fingerprint\n  Fido2") in
    *Fingerprint*) present_terminal omarchy-setup-fingerprint ;;
    *Fido2*) present_terminal omarchy-setup-fido2 ;;
    *) show_setup_menu ;;
    esac
}

show_install_menu() {
    case $(menu "Install" "󰣇  Package\n󰣇  AUR\n  TUI\n  Style\n  Terminal\n󱚤  AI\n  Gaming") in
    *Package*) terminal omarchy-pkg-install ;;
    *AUR*) terminal omarchy-pkg-aur-install ;;
    *TUI*) present_terminal omarchy-tui-install ;;
    *Style*) show_install_style_menu ;;
    *Terminal*) show_install_terminal_menu ;;
    *Gaming*) show_install_gaming_menu ;;
    *) show_main_menu ;;
    esac
}

show_install_terminal_menu() {
    case $(menu "Install" "  Alacritty\n  Ghostty\n  Kitty") in
    *Alacritty*) install_terminal "alacritty" ;;
    *Ghostty*) install_terminal "ghostty" ;;
    *Kitty*) install_terminal "kitty" ;;
    *) show_install_menu ;;
    esac
}

show_install_gaming_menu() {
    case $(menu "Install" "  Steam\n  RetroArch [AUR]\n󰍳  Minecraft") in
    *Steam*) present_terminal omarchy-install-steam ;;
    *RetroArch*) aur_install_and_launch "RetroArch" "retroarch retroarch-assets libretro libretro-fbneo" "com.libretro.RetroArch.desktop" ;;
    *Minecraft*) aur_install_and_launch "Minecraft [AUR]" "minecraft-launcher" "minecraft-launcher" ;;
    *) show_install_menu ;;
    esac
}

show_install_style_menu() {
    case $(menu "Install" "󰸌  Theme\n  Background\n  Font") in
    *Theme*) present_terminal omarchy-theme-install ;;
    *Background*) nautilus ~/.config/omarchy/current/theme/backgrounds ;;
    *Font*) show_install_font_menu ;;
    *) show_install_menu ;;
    esac
}

show_install_font_menu() {
    case $(menu "Install" "  Meslo LG Mono\n  Fira Code\n  Victor Code\n  Bistream Vera Mono" "-w 350") in
    *Meslo*) install_font "Meslo LG Mono" "ttf-meslo-nerd" "MesloLGL Nerd Font" ;;
    *Fira*) install_font "Fira Code" "ttf-firacode-nerd" "FiraCode Nerd Font" ;;
    *Victor*) install_font "Victor Code" "ttf-victor-mono-nerd" "VictorMono Nerd Font" ;;
    *Bistream*) install_font "Bistream Vera Code" "ttf-bitstream-vera-mono-nerd" "BitstromWera Nerd Font" ;;
    *) show_install_menu ;;
    esac
}

show_remove_menu() {
    case $(menu "Remove" "󰣇  Package\n  TUI\n󰸌  Theme\n󰈷  Fingerprint\n  Fido2") in
    *Package*) terminal omarchy-pkg-remove ;;
    *TUI*) present_terminal omarchy-tui-remove ;;
    *Theme*) present_terminal omarchy-theme-remove ;;
    *Fingerprint*) present_terminal "omarchy-setup-fingerprint --remove" ;;
    *Fido2*) present_terminal "omarchy-setup-fido2 --remove" ;;
    *) show_main_menu ;;
    esac
}

show_update_menu() {
    case $(menu "Update" "󰸌  Extra Themes\n  Process\n󰇅  Hardware\n  Password\n  Timezone") in
    *Themes*) present_terminal omarchy-theme-update ;;
    *Process*) show_update_process_menu ;;
    *Hardware*) show_update_hardware_menu ;;
    *Timezone*) omarchy-cmd-tzupdate ;;
    *Password*) show_update_password_menu ;;
    *) show_main_menu ;;
    esac
}

show_update_process_menu() {
    case $(menu "Restart" "  Hypridle\n  Hyprsunset\n  Swayosd\n󰌧  Walker\n󰍜  Waybar") in
    *Hypridle*) omarchy-restart-hypridle ;;
    *Hyprsunset*) omarchy-restart-hyprsunset ;;
    *Swayosd*) omarchy-restart-swayosd ;;
    *Walker*) omarchy-restart-walker ;;
    *Waybar*) omarchy-restart-waybar ;;
    *) show_update_menu ;;
    esac
}

show_update_hardware_menu() {
    case $(menu "Restart" "󱚾  Wi-Fi\n󰂯  Bluetooth") in
    *Wi-Fi*) present_terminal omarchy-restart-wifi ;;
    *Bluetooth*) present_terminal omarchy-restart-bluetooth ;;
    *) show_update_menu ;;
    esac
}

show_update_password_menu() {
    case $(menu "Update Password" "  Drive Encryption\n  User") in
    *Drive*) present_terminal omarchy-drive-set-password ;;
    *User*) present_terminal passwd ;;
    *) show_update_menu ;;
    esac
}

show_system_menu() {
    case $(menu "System" "  Lock\n󱄄  Screensaver\n󰤄  Suspend\n  Relaunch\n󰜉  Restart\n󰐥  Shutdown") in
    *Lock*) omarchy-lock-screen ;;
    *Screensaver*) omarchy-launch-screensaver force ;;
    *Suspend*) systemctl suspend ;;
    *Relaunch*) uwsm stop ;;
    *Restart*) systemctl reboot ;;
    *Shutdown*) systemctl poweroff ;;
    *) back_to show_main_menu ;;
    esac
}

show_main_menu() {
    go_to_menu "$(menu "Go" "󱓞  Trigger\n  Style\n  Setup\n󰉉  Install\n󰭌  Remove\n  Update\n  About\n  System")"
}

go_to_menu() {
    case "${1,,}" in
    *trigger*) show_trigger_menu ;;
    *share*) show_share_menu ;;
    *style*) show_style_menu ;;
    *theme*) show_theme_menu ;;
    *screenshot*) show_screenshot_menu ;;
    *screenrecord*) show_screenrecord_menu ;;
    *setup*) show_setup_menu ;;
    *power*) show_setup_power_menu ;;
    *install*) show_install_menu ;;
    *remove*) show_remove_menu ;;
    *update*) show_update_menu ;;
    *about*) omarchy-launch-about ;;
    *system*) show_system_menu ;;
    esac
}

if [[ -n "$1" ]]; then
    BACK_TO_EXIT=true
    go_to_menu "$1"
else
    show_main_menu
fi
